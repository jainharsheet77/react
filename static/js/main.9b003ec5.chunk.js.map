{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","movies","searchWord","searchResult","showSearch","handleInputChange","e","setState","target","value","handleSearch","searchedResult","filter","item","Title","toLowerCase","includes","Year","handleClose","fetch","then","res","json","Search","catch","err","Error","className","type","onChange","onClick","this","length","map","src","Poster","alt","imdbID","id","Type","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA+FeA,E,4MA5FbC,MAAQ,CACNC,OAAQ,GACRC,WAAY,GACZC,aAAc,GACdC,YAAY,G,EAYdC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZL,WAAYI,EAAEE,OAAOC,S,EAGzBC,aAAe,WACb,IAAIC,EAAiB,EAAKX,MAAMC,OAAOW,QAAO,SAACC,GAE7C,OADWA,EAAKC,MAAMC,cAEfC,SAAS,EAAKhB,MAAME,aACzBW,EAAKI,KAAKD,SAAS,EAAKhB,MAAME,eAGlC,EAAKK,SAAS,CACZJ,aAAcQ,EACdP,YAAY,K,EAGhBc,YAAc,WACZ,EAAKX,SAAS,CACZH,YAAY,K,uDA9BhB,WAAqB,IAAD,OAClBe,MAAM,kDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,EAAKd,SAAS,CACZN,OAAQoB,EAAIE,YAGfC,OAAM,SAACC,GAAD,OAAS,IAAIC,MAAM,2B,oBAyB9B,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uBACEC,KAAK,OACLC,SAAU,SAACvB,GACT,EAAKD,kBAAkBC,MAI3B,wBAAQwB,QAASC,KAAKrB,aAAtB,uBAGDqB,KAAK/B,MAAMI,WACV,gCACE,wBAAQ0B,QAASC,KAAKb,YAAtB,0BACoC,IAAnCa,KAAK/B,MAAMG,aAAa6B,OACvB,iDAEA,qBAAKL,UAAU,SAAf,SACGI,KAAK/B,MAAMG,aAAa8B,KAAI,SAACpB,GAC5B,OACE,sBAAuBc,UAAU,QAAjC,UACE,6BAAKd,EAAKC,QACV,qBAAKoB,IAAKrB,EAAKsB,OAAQC,IAAI,WAC3B,6BAAKvB,EAAKI,SAHFJ,EAAKwB,gBAWzB,qBAAKV,UAAU,SAAf,SACGI,KAAK/B,MAAMC,OAAOgC,KAAI,SAACpB,GACtB,OACE,sBAAuByB,GAAIzB,EAAKwB,OAAQV,UAAU,QAAlD,UACE,6BAAKd,EAAKC,QACV,qBAAKoB,IAAKrB,EAAKsB,OAAQC,IAAI,WAC3B,6BAAKvB,EAAKI,OACV,mBAAGU,UAAU,SAAb,8BACiBd,EAAKwB,OADtB,wBAC4CxB,EAAK0B,UALzC1B,EAAKwB,oB,GA7EbG,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b003ec5.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nclass App extends React.Component {\n  state = {\n    movies: [],\n    searchWord: \"\",\n    searchResult: [],\n    showSearch: false\n  };\n  componentDidMount() {\n    fetch(\"https://www.omdbapi.com/?apikey=45f0782a&s=war\")\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          movies: res.Search\n        });\n      })\n      .catch((err) => new Error(\"Movies not fetched\"));\n  }\n  handleInputChange = (e) => {\n    this.setState({\n      searchWord: e.target.value\n    });\n  };\n  handleSearch = () => {\n    let searchedResult = this.state.movies.filter((item) => {\n      let word = item.Title.toLowerCase();\n      return (\n        word.includes(this.state.searchWord) ||\n        item.Year.includes(this.state.searchWord)\n      );\n    });\n    this.setState({\n      searchResult: searchedResult,\n      showSearch: true\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      showSearch: false\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              this.handleInputChange(e);\n            }}\n          />\n\n          <button onClick={this.handleSearch}>Search</button>\n        </div>\n\n        {this.state.showSearch ? (\n          <div>\n            <button onClick={this.handleClose}>Close Search</button>\n            {this.state.searchResult.length === 0 ? (\n              <h1>No result Found</h1>\n            ) : (\n              <div className=\"movies\">\n                {this.state.searchResult.map((item) => {\n                  return (\n                    <div key={item.imdbID} className=\"movie\">\n                      <h1>{item.Title}</h1>\n                      <img src={item.Poster} alt=\"Poster\" />\n                      <h2>{item.Year}</h2>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {this.state.movies.map((item) => {\n              return (\n                <div key={item.imdbID} id={item.imdbID} className=\"movie\">\n                  <h1>{item.Title}</h1>\n                  <img src={item.Poster} alt=\"Poster\" />\n                  <h2>{item.Year}</h2>\n                  <p className=\"hidden\">\n                    {`Imdb Id is ${item.imdbID} and it is a ${item.Type}`}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}